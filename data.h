#pragma once


//Utils

String pieces[7] = { "empty", "pawn", "knight", "bishop", "rook", "queen", "king" };

int piece_weights[14]={ 64,272,128, 208,32,304,32,304,32,304,32,304,16, 320 };

Mat_<int> weights(7, 2, piece_weights);

double aspect_ratios[5] = { 1.0,1.25,1.5,1.75,2.0 };

double piece_to_ratio[7] = { 1.0,1.0,1.25,1.5,1.25,1.75,2.0 };

int piece_classes[7] = { 0,1,2,3,4,5,6 };

cv::Mat_<float> centers;

//Dsift parameters

int step_size = 8;
int nr_bins = 10;


//Classifiers

Ptr<ml::SVM> svm_all;

Ptr<ml::SVM> svm_empty;
Ptr<ml::SVM> svm_pawn;
Ptr<ml::SVM> svm_knight;
Ptr<ml::SVM> svm_bishop;
Ptr<ml::SVM> svm_rook;
Ptr<ml::SVM> svm_queen;
Ptr<ml::SVM> svm_king;

std::vector<Ptr<ml::SVM>> classifiers = { svm_empty , svm_pawn,svm_knight,svm_bishop ,svm_rook,svm_queen, svm_king };

// Boards
int empty_board[64] = {
	0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

//      Testing									


	// Set 1
int board_5_1[64] = { 0, 0, 0, 0, 0, 0, 0, 0 ,
 0, 0, 0, 0, 0, 0, 0, 0 ,
 0, 0, 0, 0, 0, 2, 0, 0 ,
 0, 0, 1, 0, 0, 0, 0, 0 ,
 0, 0, 0, 0, 0, 0, 1, 0 ,
 0, 1, 0, 0, 0, 3, 0, 0 ,
 0, 0, 0, 0, 0, 0, 0, 0 ,
 0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_5_1(8, 8, board_5_1);

int board_10_1[64] = {
 0, 0, 0, 0, 0, 0, 0, 0 ,
 0, 0, 5, 0, 0, 2, 0, 4 ,
 0, 1, 0, 1, 0, 0, 0, 0 ,
 0, 0, 0, 0, 0, 0, 0, 0 ,
 0, 1, 0, 0, 0, 0, 0, 0 ,
 0, 0, 3, 0, 0, 0, 1, 0 ,
 0, 0, 0, 6, 0, 4, 0, 0 ,
 0, 0, 0, 0, 0, 0, 0, 0 }
;

Mat_<int> matBoard_10_1(8, 8, board_10_1);

int board_15_1[64] = 
{ 0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 5, 0, 0, 2, 0, 4,
		0, 1, 0, 1, 4, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 1, 0, 0, 3, 0, 0, 0,
		0, 0, 3, 0, 0, 0, 1, 5,
		4, 0, 0, 6, 0, 4, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_15_1(8, 8, board_15_1);

int board_20_1[64] = 
{ 0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 5, 0, 0, 2, 0, 4,
		2, 1, 0, 1, 4, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 3, 3,
		0, 1, 0, 0, 3, 0, 0, 0,
		0, 0, 3, 0, 0, 0, 1, 5,
		4, 0, 0, 6, 0, 4, 0, 0,
		0, 2, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_20_1(8, 8, board_20_1);

int board_25_1[64] = 
{ 0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 5, 0, 0, 2, 0, 4,
		2, 1, 0, 1, 4, 0, 0, 0,
		0, 0, 1, 2, 0, 1, 3, 3,
		1, 1, 0, 1, 3, 0, 0, 0,
		0, 0, 3, 0, 0, 0, 1, 5,
		4, 0, 0, 6, 0, 4, 0, 0,
		0, 2, 0, 0, 0, 0, 5, 0 };

Mat_<int> matBoard_25_1(8, 8, board_25_1);

int board_30_1[64] = 
{ 6, 0, 0, 4, 5, 0, 0, 2,
		0, 5, 0, 0, 0, 0, 4, 0,
		2, 0, 3, 1, 0, 1, 0, 2,
		1, 1, 0, 0, 1, 0, 0, 1,
		0, 3, 0, 2, 1, 1, 0, 4,
		1, 0, 1, 3, 0, 1, 0, 0,
		0, 4, 1, 1, 1, 0, 6, 1,
		0, 0, 0, 0, 0, 0, 0, 0 };
Mat_<int> matBoard_30_1(8, 8, board_30_1);

// Set 2
int board_5_2[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 4, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_5_2(8, 8, board_5_2);

int board_10_2[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 2, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 2, 0, 4, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_10_2(8, 8, board_10_2);

int board_15_2[64] = 
{ 0, 0, 4, 0, 0, 0, 0, 0,
		0, 3, 0, 0, 2, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		0, 2, 0, 4, 0, 3, 0, 0,
		0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 4, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_15_2(8, 8, board_15_2);

int board_20_2[64] = 
{ 0, 0, 4, 0, 0, 0, 0, 0,
		0, 3, 0, 2, 2, 0, 6, 0,
		1, 0, 0, 0, 0, 1, 0, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		0, 1, 0, 1, 0, 0, 1, 0,
		1, 2, 0, 4, 0, 3, 0, 0,
		0, 0, 0, 0, 2, 0, 6, 0,
		0, 0, 4, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_20_2(8, 8, board_20_2);

int board_25_2[64] = 
{ 0, 0, 4, 0, 0, 0, 0, 0,
		0, 3, 0, 2, 2, 0, 6, 0,
		1, 0, 0, 5, 0, 1, 0, 1,
		0, 1, 0, 1, 0, 0, 1, 3,
		0, 1, 0, 1, 0, 0, 1, 0,
		1, 2, 0, 4, 0, 3, 0, 1,
		0, 0, 0, 0, 2, 0, 6, 0,
		0, 5, 4, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_25_2(8, 8, board_25_2);

int board_30_2[64] = 
{ 0, 0, 4, 0, 0, 0, 0, 0,
			0, 3, 0, 2, 2, 0, 6, 3,
			1, 0, 0, 5, 1, 1, 0, 1,
			0, 1, 0, 1, 0, 0, 1, 3,
			0, 1, 4, 1, 0, 0, 1, 0,
			1, 2, 0, 4, 1, 3, 0, 1,
			0, 0, 0, 0, 2, 1, 6, 0,
			0, 5, 4, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_30_2(8, 8, board_30_2);


//Set 3
int board_5_3[64] = { 0, 0, 0, 0, 0, 0, 6, 0,
					   0, 0, 0, 0, 0, 0, 1, 0,
					0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 2, 0, 0,
					0, 0, 0, 0, 0, 0, 1, 1,
					0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_5_3(8, 8, board_5_3);

int board_10_3[64] = 
{ 4, 0, 0, 0, 0, 0, 6, 0,
		0, 1, 0, 0, 0, 0, 1, 0,
		0, 0, 2, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 2, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 1,
		0, 0, 4, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_10_3(8, 8, board_10_3);

int board_15_3[64] = 
{ 4, 0, 0, 0, 0, 0, 6, 0,
		0, 1, 0, 0, 1, 0, 1, 0,
		0, 0, 2, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 0, 0,
		0, 0, 0, 1, 0, 0, 0, 0,
		0, 0, 3, 0, 0, 2, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 1,
		0, 0, 4, 0, 0, 0, 6, 0 };

Mat_<int> matBoard_15_3(8, 8, board_15_3);

int board_20_3[64] =
{ 4, 0, 0, 0, 0, 0, 6, 0,
		0, 1, 0, 0, 1, 0, 1, 0,
		0, 0, 2, 0, 0, 5, 0, 0,
		0, 0, 0, 1, 0, 1, 0, 0,
		0, 0, 0, 1, 3, 0, 0, 0,
		0, 0, 3, 0, 0, 2, 0, 0,
		0, 1, 0, 0, 0, 1, 1, 1,
		0, 0, 4, 0, 4, 0, 6, 0 };

Mat_<int> matBoard_20_3(8, 8, board_20_3);

int board_25_3[64] = 
{ 4, 0, 0, 0, 0, 0, 6, 0,
		0, 1, 0, 0, 1, 0, 1, 0,
		1, 0, 2, 0, 0, 5, 0, 2,
		0, 3, 1, 1, 0, 1, 0, 0,
		0, 0, 0, 1, 3, 0, 0, 0,
		0, 0, 3, 0, 0, 2, 0, 0,
		0, 1, 0, 2, 0, 1, 1, 1,
		0, 0, 4, 0, 4, 0, 6, 0 };

Mat_<int> matBoard_25_3(8, 8, board_25_3);

int board_30_3[64] = 
{ 4, 0, 0, 4, 0, 0, 6, 0,
		0, 1, 1, 0, 1, 0, 1, 0,
		1, 0, 2, 0, 0, 5, 0, 2,
		0, 3, 1, 1, 0, 1, 0, 0,
		1, 0, 0, 1, 3, 0, 0, 3,
		5, 0, 3, 0, 0, 2, 0, 0,
		0, 1, 0, 2, 0, 1, 1, 1,
		0, 0, 4, 0, 4, 0, 6, 0 };

Mat_<int> matBoard_30_3(8, 8, board_30_3);

//Set 4
int board_5_4[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		6, 0, 0, 0, 0, 0, 0, 0,
		0, 4, 0, 0, 0, 0, 3, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 3, 0, 0, 1, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_5_4(8, 8, board_5_4);


int board_10_4[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		6, 0, 0, 0, 0, 0, 0, 0,
		0, 4, 0, 0, 0, 0, 3, 0,
		0, 0, 0, 0, 1, 0, 0, 0,
		1, 0, 0, 2, 0, 0, 0, 0,
		0, 0, 3, 0, 0, 1, 0, 3,
		0, 0, 0, 0, 0, 0, 6, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_10_4(8, 8, board_10_4);

int board_15_4[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		6, 0, 0, 0, 5, 0, 0, 0,
		0, 4, 0, 1, 0, 0, 3, 0,
		0, 0, 0, 0, 1, 0, 0, 2,
		1, 0, 0, 2, 0, 0, 0, 0,
		0, 0, 3, 1, 0, 1, 0, 3,
		0, 1, 0, 0, 0, 0, 6, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_15_4(8, 8, board_15_4);

int board_20_4[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		6, 0, 0, 0, 5, 1, 0, 5,
		0, 4, 0, 1, 0, 0, 3, 0,
		0, 0, 4, 0, 1, 0, 0, 2,
		1, 0, 0, 2, 0, 0, 0, 0,
		1, 0, 3, 1, 0, 1, 0, 3,
		0, 1, 0, 0, 3, 0, 6, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_20_4(8, 8, board_20_4);

int board_25_4[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		6, 0, 4, 0, 5, 1, 0, 5,
		0, 4, 0, 1, 0, 0, 3, 0,
		0, 1, 4, 0, 1, 0, 1, 2,
		1, 0, 0, 2, 0, 1, 0, 0,
		1, 0, 3, 1, 0, 1, 0, 3,
		0, 1, 0, 0, 3, 0, 6, 0,
		0, 0, 2, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_25_4(8, 8, board_25_4);

int board_30_4[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		6, 0, 4, 0, 5, 1, 0, 5,
		0, 4, 0, 1, 0, 0, 3, 0,
		0, 1, 4, 0, 1, 0, 1, 2,
		1, 0, 0, 2, 0, 1, 0, 1,
		1, 1, 3, 1, 0, 1, 0, 3,
		0, 1, 0, 1, 3, 0, 6, 1,
		0, 0, 2, 0, 0, 2, 0, 0 };

Mat_<int> matBoard_30_4(8, 8, board_30_4);

// Set 5
int board_5_5[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 5, 0, 0, 0, 0, 0, 1,
		0, 0, 0, 0, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 2, 0,
		0, 0, 4, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_5_5(8, 8, board_5_5);

int board_10_5[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 5, 0, 1, 0, 0, 0, 1,
		0, 0, 3, 0, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 2, 0,
		0, 0, 4, 0, 0, 0, 1, 0,
		0, 0, 0, 6, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_10_5(8, 8, board_10_5);

int board_15_5[64] = 
{ 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 2, 0, 0,
		0, 5, 0, 1, 0, 0, 0, 1,
		0, 0, 3, 0, 1, 0, 0, 0,
		3, 0, 0, 1, 0, 0, 2, 0,
		0, 0, 4, 0, 0, 0, 1, 1,
		2, 0, 0, 6, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_15_5(8, 8, board_15_5);

int board_20_5[64] = 
{ 0, 0, 3, 0, 0, 0, 0, 4,
		0, 0, 0, 0, 0, 2, 0, 0,
		0, 5, 0, 1, 0, 0, 1, 1,
		0, 0, 3, 0, 1, 0, 0, 0,
		3, 0, 0, 1, 0, 1, 2, 0,
		0, 0, 4, 0, 0, 0, 1, 1,
		2, 3, 0, 6, 1, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_20_5(8, 8, board_20_5);

int board_25_5[64] = 
{ 0, 0, 3, 0, 0, 0, 0, 4,
		6, 0, 0, 0, 0, 2, 0, 0,
		0, 5, 0, 1, 0, 1, 1, 1,
		0, 0, 3, 0, 1, 0, 0, 0,
		3, 1, 0, 1, 0, 1, 2, 0,
		0, 0, 4, 0, 0, 0, 1, 1,
		2, 3, 0, 6, 1, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 0, 0 };

Mat_<int> matBoard_25_5(8, 8, board_25_5);

int board_30_5[64] = 
{ 0, 0, 3, 0, 4, 0, 0, 4,
		6, 0, 4, 0, 0, 2, 0, 0,
		0, 5, 0, 1, 0, 1, 1, 1,
		0, 0, 3, 0, 1, 0, 0, 2,
		3, 1, 0, 1, 0, 1, 2, 0,
		0, 0, 4, 0, 0, 0, 1, 1,
		2, 3, 0, 6, 1, 1, 0, 0,
		0, 1, 0, 0, 0, 0, 1, 1 };

Mat_<int> matBoard_30_5(8, 8, board_30_5);

float pts_5_1[12] = { 310.0f, 786.0f, 928.0f, 116.0f,
105.0f, 103.0f, 554.0f, 554.0f,
1.0f, 1.0f, 1.0f, 1.0f };

Mat_<float> matPts_5_1(3, 4, pts_5_1);

float pts_5_2[12] = { 287.0f, 785.0f, 941.0f, 144.0f,
80.0f, 79.0f, 562.0f, 569.0f,
	1.0f, 1.0f, 1.0f, 1.0f };

Mat_<float> matPts_5_2(3, 4, pts_5_2);

float pts_5_3[12] = { 272.0f, 763.0f, 901.0f, 132.0f,
73.0f, 85.0f, 557.0f, 558.0f,
	1.0f, 1.0f, 1.0f, 1.0f };

Mat_<float> matPts_5_3(3, 4, pts_5_3);

float pts_5_4[12] = { 229, 806, 963, 147,
64, 72, 554, 545,
	1, 1, 1, 1 };

Mat_<float> matPts_5_4(3, 4, pts_5_4);

float pts_5_5[12] = { 293, 804, 962, 154,
			45, 56, 552, 547,
			1, 1, 1, 1 };

Mat_<float> matPts_5_5(3, 4, pts_5_5);


float pts_10_1[12] = { 304, 794, 937, 150,
						87, 91, 562, 552,
						1, 1, 1, 1 };

Mat_<float> matPts_10_1(3, 4, pts_10_1);


float pts_10_2[12] = { 303, 789, 927, 157,
91, 92, 561, 557,
	1, 1, 1, 1 };

Mat_<float> matPts_10_2(3, 4, pts_10_2);

float pts_10_3[12] = { 297, 785, 932, 161,
82, 85, 549, 552,
	1, 1, 1, 1 };

Mat_<float> matPts_10_3(3, 4, pts_10_3);

float pts_10_4[12] = { 285, 786, 939, 137,
71, 79, 559, 552,
	1, 1, 1, 1 };

Mat_<float> matPts_10_4(3, 4, pts_10_4);

float pts_10_5[12] = { 278, 782, 943, 135,
67, 71, 550, 558,
	1, 1, 1, 1 };

Mat_<float> matPts_10_5(3, 4, pts_10_5);

float pts_15_1[12] = { 310, 786, 939, 153,
100, 96, 559, 562,
	1, 1, 1, 1 };

Mat_<float> matPts_15_1(3, 4, pts_15_1);

float pts_15_2[12] = { 303, 794, 942, 168,
78, 80, 550, 553,
	1, 1, 1, 1 };

Mat_<float> matPts_15_2(3, 4, pts_15_2);

float pts_15_3[12] = { 295, 788, 938, 156,
75, 83, 554, 552,
	1, 1, 1, 1 };

Mat_<float> matPts_15_3(3, 4, pts_15_3);


float pts_15_4[12] = { 277, 778, 941, 132,
72, 80, 558, 561,
	1, 1, 1, 1 };

Mat_<float> matPts_15_4(3, 4, pts_15_4);

float pts_15_5[12] = { 279, 790, 958, 137,
65, 71, 557, 567,
	1, 1, 1, 1 };

Mat_<float> matPts_15_5(3, 4, pts_15_5);

float pts_20_1[12] = { 297, 780, 926, 156,
99, 94, 556, 562,
	1, 1, 1, 1 };

Mat_<float> matPts_20_1(3, 4, pts_20_1);

float pts_20_2[12] = { 291, 786, 940, 152,
75, 83, 556, 557,
	1, 1, 1, 1 };

Mat_<float> matPts_20_2(3, 4, pts_20_2);


float pts_20_3[12] = { 299, 790, 936, 156,
80, 91, 561, 552,
	1, 1, 1, 1 };

Mat_<float> matPts_20_3(3, 4, pts_20_3);

float pts_20_4[12] = { 283, 785, 936, 134,
70, 83, 560, 555,
	1, 1, 1, 1 };

Mat_<float> matPts_20_4(3, 4, pts_20_4);


float pts_20_5[12] = { 290, 800, 949, 147,
52, 63, 558, 553,
	1, 1, 1, 1 };

Mat_<float> matPts_20_5(3, 4, pts_20_5);

float pts_25_1[12] = { 301, 793, 937, 169,
79, 80, 562, 562,
	1, 1, 1, 1 };

Mat_<float> matPts_25_1(3, 4, pts_25_1);

float pts_25_2[12] = { 291, 786, 942, 137,
79, 83, 548, 547,
	1, 1, 1, 1 };

Mat_<float> matPts_25_2(3, 4, pts_25_2);

float pts_25_3[12] = { 293, 788, 944, 159,
85, 86, 558, 567,
	1, 1, 1, 1 };

Mat_<float> matPts_25_3(3, 4, pts_25_3);

float pts_25_4[12] = { 293, 809, 960, 147,
49, 64, 562, 556,
	1, 1, 1, 1 };

Mat_<float> matPts_25_4(3, 4, pts_25_4);
	
float pts_25_5[12] = { 283, 787, 957, 147,
66, 79, 556, 561,
	1, 1, 1, 1 };

Mat_<float> matPts_25_5(3, 4, pts_25_5);

float pts_30_1[12] = { 292, 775, 925, 161,
90, 98, 557, 563,
	1, 1, 1, 1 };

Mat_<float> matPts_30_1(3, 4, pts_30_1);

float pts_30_2[12] = { 282, 786, 939, 140,
59, 65, 546, 549,
	1, 1, 1, 1 };

Mat_<float> matPts_30_2(3, 4, pts_30_2);

float pts_30_3[12] = { 286, 774, 914, 150,
88, 96, 568, 571,
	1, 1, 1, 1 };

Mat_<float> matPts_30_3(3, 4, pts_30_3);

float pts_30_4[12] = { 297, 786, 926, 167,
82, 96, 559, 554,
	1, 1, 1, 1 };

Mat_<float> matPts_30_4(3, 4, pts_30_4);

float pts_30_5[12] = { 273, 783, 942, 128,
54, 68, 551, 551,
	1, 1, 1, 1 };

Mat_<float> matPts_30_5(3, 4, pts_30_5);

std::vector < Mat_<int>> boards_5_pieces;
std::vector < Mat_<float>> points_5_pieces;

std::vector < Mat_<int>> boards_10_pieces;
std::vector < Mat_<float>> points_10_pieces;

std::vector < Mat_<int>> boards_15_pieces;
std::vector < Mat_<float>> points_15_pieces;

std::vector < Mat_<int>> boards_20_pieces;
std::vector < Mat_<float>> points_20_pieces;

std::vector < Mat_<int>> boards_25_pieces;
std::vector < Mat_<float>> points_25_pieces;


std::vector < Mat_<int>> boards_30_pieces;
std::vector < Mat_<float>> points_30_pieces;

std::vector<std::vector<Mat_<int>>> setBoards;
std::vector<std::vector<Mat_<float>>> setPoints;

																																